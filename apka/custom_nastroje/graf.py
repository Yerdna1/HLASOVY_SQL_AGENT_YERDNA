"""N√°stroj na kreslenie Plotly grafov."""

import chainlit as cl
import plotly
from apka.widgets.spolocne import zapisovac

definicia_nakresli_plotly_graf = {
    "name": "nakresli_plotly_graf",
    "description": "Nakresl√≠ Plotly graf na z√°klade poskytnutej JSON fig√∫ry a zobraz√≠ ho spolu so sprievodnou spr√°vou.",
    "parameters": {
        "type": "object",
        "properties": {
            "sprava": {
                "type": "string",
                "description": "Spr√°va, ktor√° sa m√° zobrazi≈• vedƒæa grafu",
            },
            "plotly_json_fig": {
                "type": "string",
                "description": "JSON re≈•azec reprezentuj√∫ci Plotly fig√∫ru, ktor√° sa m√° nakresli≈•",
            },
        },
        "required": ["sprava", "plotly_json_fig"],
    },
}


async def spracuj_nakreslenie_plotly_grafu(sprava: str, plotly_json_fig):
    """Spracuje po≈æiadavku na nakreslenie Plotly grafu."""
    try:
        zapisovac.info(f"üé® Kresl√≠ sa Plotly graf so spr√°vou: {sprava}")
        figura = plotly.io.from_json(plotly_json_fig)
        elementy = [cl.Plotly(name="chart", figure=figura, display="inline")]
        await cl.Message(content=sprava, elements=elementy).send()
        zapisovac.info(f"üí° Plotly graf √∫spe≈°ne zobrazen√Ω.")
    except Exception as e:
        zapisovac.error(f"‚ùå Chyba pri kreslen√≠ Plotly grafu: {str(e)}")
        return {"error": str(e)}


nakresli_plotly_graf = (definicia_nakresli_plotly_graf, spracuj_nakreslenie_plotly_grafu)
